<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Scratch</title>
    <link>https://mahmednabil109.github.io/scratch/posts/</link>
    <description>Recent content in Posts on Scratch</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://mahmednabil109.github.io/scratch/posts/index.xml" rel="self" type="application/rss+xml" />
  </channel>
</rss>
.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>üß™ Smart Pointers (distilled)</title>
      <link>https://mahmednabil109.github.io/scratch/posts/smart_pointers/</link>
      <pubDate>Thu, 20 Jul 2023 15:08:25 +0300</pubDate>
      
      <guid>https://mahmednabil109.github.io/scratch/posts/smart_pointers/</guid>
      <description>Background Programming mostly in garbage-collected languages (java, python, etc.), there are a lot of things that I took for granted - if I even knew about them -. These things came to hunt me when trying none garbage-collected languages like C++, rust, etc (especially rust). Most of the issues are related to resource management and the main resource that causes problems is memory. To avoid such hassle there are patterns developed to safely and efficiently manage memory and other resources.</description>
    </item>
    
    <item>
      <title>üï∏Ô∏è Facebook 2.0</title>
      <link>https://mahmednabil109.github.io/scratch/posts/distributed-fb/</link>
      <pubDate>Sat, 17 Jun 2023 04:18:10 +0300</pubDate>
      
      <guid>https://mahmednabil109.github.io/scratch/posts/distributed-fb/</guid>
      <description>Once while I was wondering why we exist during solving my final exam, I read an interesting question - which is an unlikely event to occur - it was a software architecture design question saying (not a word-to-word quoting):
If we want to design a fully distributed version of Facebook, that is instead of having a ~30k server farm to run the different services, we want to design a P2P distributed architecture modeling each user phone as a node in the P2P network instead of the server farm.</description>
    </item>
    
    <item>
      <title>üïπÔ∏è I/O Models </title>
      <link>https://mahmednabil109.github.io/scratch/posts/io-models/</link>
      <pubDate>Fri, 16 Jun 2023 21:40:48 +0300</pubDate>
      
      <guid>https://mahmednabil109.github.io/scratch/posts/io-models/</guid>
      <description>üé§üé§ Most CS challenges are actually boring !!.
What is an I/O operation? Well, any code running on a modern CPU is either executing normal instructions (arithmetic operations, moving around memory, etc) or an I/O instruction which is to communicate with external (off-cpu) peripherals like Network interfaces, USB controllers, etc. This communication is much slower than other operations and it&amp;rsquo;s often done through buffers in order for other device interfaces to keep up with the CPU.</description>
    </item>
    
  </channel>
</rss>
